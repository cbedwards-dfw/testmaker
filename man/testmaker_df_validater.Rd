% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testmaker_df.R
\name{testmaker_df_validater}
\alias{testmaker_df_validater}
\title{Generate code for input-checking function based on \code{cli_abort} framework}
\usage{
testmaker_df_validater(
  x,
  return.style = c("clip", "text", "none"),
  silent = FALSE,
  object.name = "x",
  col.order.matters = TRUE
)
}
\arguments{
\item{x}{Template dataframe of target object (e.g. we expect our test object to share properties with this)}

\item{return.style}{Designation for what to return. "clip" returns nothing, but loads the text into the clipboard.
"text" returns the text as a character vector, "none" returns nothing}

\item{silent}{Suppress printing text to console? logical; default of false.}

\item{object.name}{Name of the object to apply the stopifnot to; presumably the name of the dataframe argument}

\item{col.order.matters}{When we generate code to test for column names, should we test for exact equivalence (\code{TRUE}), or just the presence of all the same column names (\code{FALSE})?. Logical, defaults to TRUE. \code{FALSE} LOGIC IS NOT CURRENTLY IMPLEMENTED!}
}
\value{
Either nothing (when return.style is \code{"clip"} or \code{"none"}), or character string of R code.
}
\description{
This function streamlines creating helper functions to check dataframe inputs,
writing code based on the characteristics of a template dataframe. Intended use:
when writing a function that takes a dataframe as an input, and you want to include an input check
to confirm the input has the same # of columns, column names, and column classes as
the dataframe you're using to develop your code. Providing informative error messages requires
several lines of code, so it can be cleaner to write this input check as a separate function.
}
\details{
By default, this function copies the appropriate text to the system clipboard;
all that is needed after running the function is to paste into the appropriate
R file and provide a function name.

Note that testmaker_df_cli generates all the likely/common attribute checks,
not all of which may be relevant for any specific use case(e.g.,
the generated code includes a check that the input dataframe contains the same number
of rows as the template data frame; this is often not the expectation).
Modify the resulting function template to match your specific needs.
checking that the input has the ).
}
\examples{
testmaker_df_validater(cars, return.style = "none")
\dontrun{
#Workflow version, which loads text into clipboard for easy pasting:
testmaker_df_validator(cars)
}
}
