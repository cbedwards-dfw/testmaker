% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testmaker_df.R
\name{testmaker_df_cli}
\alias{testmaker_df_cli}
\title{Workhorse function to generate \code{cli_abort} tests for dataframe inputs}
\usage{
testmaker_df_cli(
  x,
  return.style = c("clip", "text", "none"),
  silent = FALSE,
  object.name = "res",
  col.order.matters = TRUE
)
}
\arguments{
\item{x}{Template dataframe of target object (e.g. we expect our test object to share properties with this)}

\item{return.style}{Designation for what to return. "clip" returns nothing, but loads the text into the clipboard.
"text" returns the text as a character vector, "none" returns nothing}

\item{silent}{Suppress printing text to console? logical; default of false.}

\item{object.name}{Name of the object to apply the stopifnot to; presumably the name of the dataframe argument}

\item{col.order.matters}{When we generate code to test for column names, should we test for exact equivalence (\code{TRUE}), or just the presence of all the same column names (\code{FALSE})?. Logical, defaults to TRUE. \code{FALSE} LOGIC IS NOT CURRENTLY IMPLEMENTED!}
}
\value{
Either nothing or a character vector of lines of R code for writing a testthat test, depending on \code{return.style}.
}
\description{
Generates R code to test expectations based on a template database. Intended workflow:
when writing functions to work with a dataframe with a specific expected structure,
load an example of that dataframe into the environment and then call \code{testmaker_df(exampledataframe)}.
This will print if statements and \code{cli::cli_abort(...)} function calls based on the dimensions of the example data frame, the classes
of the columns, and the names of the columns. Note that this is not intended to replace decision-making, but rather
to streamline the process of generating the relevant code. In particular, testing the number of rows is often not appropriate
(e.g., in many use cases the input data frame is expected to have unknown nrow).
}
\examples{
\dontrun{
stopifnotmaker(cars)
}
}
